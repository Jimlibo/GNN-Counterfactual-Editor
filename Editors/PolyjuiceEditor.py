"""
Created 11 November 2023
@author: Dimitris Lymperopoulos
Description: A script containing a counterfactual editor class that uses Polyjuice to generate edits
"""

import torch
import pandas as pd
from tqdm import tqdm
from datetime import datetime
from polyjuice import Polyjuice


class PolyjuiceEditor:
    def __init__(self, cuda=None):
        """

        :param cuda: a boolean value indicating whether to use gpu for model inference
        """

        self.cuda = torch.cuda.is_available() if cuda is None else cuda
        self.pj = Polyjuice(model_path='uw-hai/polyjuice', is_cuda=self.cuda)

    def generate_counterfactuals(self, sentences):
        """
        A function that takes as input a list of sentences and returns a list of counterfactuals generated by Polyjuice
        :param sentences: a list of sentences
        :return: a list of the generated counterfactual sentences
        """

        print("[INFO]: Generating Counterfactuals...")

        counter_sentences = []

        for s in tqdm(sentences):
            perturbations = self.pj.perturb(s, num_perturbations=1)
            counter_sentences.append(perturbations[0] if perturbations else s)

        return counter_sentences


if __name__ == '__main__':

    start = datetime.now()

    pe = PolyjuiceEditor(cuda=False)
    sents = pd.read_csv('../Data/IMDB/test/imdb_test.csv').head(10)['Review'].tolist()
    counter_sents = pe.generate_counterfactuals(sents)
    print(sents == counter_sents)

    print("/nScript execution time: {}".format(datetime.now() - start))
